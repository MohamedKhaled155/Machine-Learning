{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6531c2f9",
   "metadata": {},
   "source": [
    "https://www.hackerrank.com/challenges/find-second-maximum-number-in-a-list/problem?isFullScreen=false\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "777f80fe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 2 3 4 5 666 98 7 \n",
      "98\n"
     ]
    }
   ],
   "source": [
    "l = list(map(int, input().split()))\n",
    "l1 = list(set(l))\n",
    "l1.sort()\n",
    "l1.reverse()\n",
    "print (l1[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43620eff",
   "metadata": {},
   "source": [
    "https://www.hackerrank.com/challenges/list-comprehensions/problem?isFullScreen=false"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9e4f0bf1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "1\n",
      "1\n",
      "2\n"
     ]
    }
   ],
   "source": [
    "x= int(input())\n",
    "y= int(input())\n",
    "z= int(input())\n",
    "n= int(input())\n",
    "ll = []\n",
    "for i in range (x+1):\n",
    "    for j in range (y+1):\n",
    "        for k in range (z+1):\n",
    "            if sum([i,j,k]) != n:\n",
    "                ll.append([i,j,k])\n",
    "                "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c54a4b6b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ll"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "615ca16a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "[[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]\n"
     ]
    }
   ],
   "source": [
    "x= int(input())\n",
    "y= int(input())\n",
    "z= int(input())\n",
    "n= int(input())\n",
    "ll = [[i,j,k] for i in range (x+1) for j in range(y+1) for k in range(z+1) if sum ([i,j,k]) != n]\n",
    "print(ll)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d579b1ec",
   "metadata": {},
   "source": [
    "https://www.hackerrank.com/challenges/swap-case/problem?isFullScreen=false"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "75c261e0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dOHA\n"
     ]
    }
   ],
   "source": [
    "def swap_case(s):\n",
    "    output = \"\"\n",
    "    for char in s:\n",
    "        if char.lower() == char:\n",
    "            output+= char.upper()\n",
    "        else:\n",
    "            output += char.lower()\n",
    "            \n",
    "    return output\n",
    "print(swap_case('Doha'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83c367bd",
   "metadata": {},
   "source": [
    "https://www.hackerrank.com/challenges/calendar-module/problem?isFullScreen=false"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a651dab4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2022 12 22\n",
      "THURSDAY\n"
     ]
    }
   ],
   "source": [
    "import calendar\n",
    "Y, M, D =map(int, input().split())\n",
    "if calendar.weekday(Y, M, D) == 0:\n",
    "    print(\"MONDAY\")\n",
    "elif calendar.weekday(Y, M, D) == 1:\n",
    "    print(\"TUESDAY\")\n",
    "elif calendar.weekday(Y, M, D) == 2:\n",
    "    print(\"WEDNESDAY\")\n",
    "elif calendar.weekday(Y, M, D) == 3:\n",
    "    print(\"THURSDAY\")\n",
    "elif calendar.weekday(Y, M, D) == 4:\n",
    "    print(\"FRIDAY\")\n",
    "elif calendar.weekday(Y, M, D) == 5:\n",
    "    print(\"SATURDAY\")\n",
    "elif calendar.weekday(Y, M, D) == 6:\n",
    "    print(\"SUNDAY\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "dc38143a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2022 12 23\n",
      "FRIDAY\n"
     ]
    }
   ],
   "source": [
    "import calendar\n",
    "y, m, d = map(int, input().split())\n",
    "print (calendar.day_name[calendar.weekday(y, m, d)].upper())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdbb97da",
   "metadata": {},
   "source": [
    "https://www.hackerrank.com/challenges/polar-coordinates/problem?isFullScreen=false"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0d5bbc00",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter acomlex number:1+2j\n",
      "2.236\n",
      "1.107\n"
     ]
    }
   ],
   "source": [
    "import cmath\n",
    "n= complex(input(\"Enter acomlex number:\"))\n",
    "def polar_num (n):\n",
    "    \n",
    "    for i in cmath.polar(n):\n",
    "        print(round(i,3))\n",
    "polar_num(n)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "b691350f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter acomlex number:1+2j\n",
      "1.1071487177940904\n",
      "2.23606797749979\n"
     ]
    }
   ],
   "source": [
    "import cmath\n",
    "n= complex(input(\"Enter acomlex number:\"))\n",
    "def polar_num (n):\n",
    "    print(cmath.phase(n))\n",
    "    print(abs(n))\n",
    "polar_num(n)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d15d1600",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import calendar\n",
    "calendar.weekday(2022,12,3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "81ed4d67",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
